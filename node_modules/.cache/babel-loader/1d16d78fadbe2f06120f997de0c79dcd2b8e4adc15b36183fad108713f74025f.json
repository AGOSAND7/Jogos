{"ast":null,"code":"var _jsxFileName = \"/home/mano/Desktop/jogos/xbola/src/Tabuleiro.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Quadrado from \"./Quadrado\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tabuleiro() {\n  _s();\n  const [quadrados, setQuadrados] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [posicoesVencedoras, setPosicoesVencedoras] = useState([]);\n\n  // Calcula o vencedor ou verifica empate após cada jogada\n  useEffect(() => {\n    const resultado = calcularVencedor(quadrados);\n    if (resultado) {\n      setLinhaVencedora(resultado.linhaVencedora);\n    } else if (!quadrados.includes(null)) {\n      setTimeout(reiniciarJogo, 2000); // Empate: Reinicia automaticamente\n    }\n  }, [quadrados]);\n  function handleClick(index) {\n    if (quadrados[index] || calcularVencedor(quadrados)) return;\n    const novosQuadrados = quadrados.slice();\n    novosQuadrados[index] = xIsNext ? \"X\" : \"O\";\n    setQuadrados(novosQuadrados);\n    setXIsNext(!xIsNext);\n    const resultado = calcularVencedor(novosQuadrados);\n    if (resultado) {\n      setPosicoesVencedoras(resultado.posicoes);\n    }\n  }\n  function renderizarQuadrado(index) {\n    const isVencedor = posicoesVencedoras.includes(index); // Verifica se o índice é uma posição vencedora\n    return /*#__PURE__*/_jsxDEV(Quadrado, {\n      value: quadrados[index],\n      onClick: () => handleClick(index),\n      isVencedor: isVencedor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n  const resultado = calcularVencedor(quadrados);\n  const status = resultado ? `Vencedor: ${resultado.vencedor}` : `Jogador: ${xIsNext ? \"X\" : \"O\"}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [renderizarQuadrado(0), renderizarQuadrado(1), renderizarQuadrado(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [renderizarQuadrado(3), renderizarQuadrado(4), renderizarQuadrado(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [renderizarQuadrado(6), renderizarQuadrado(7), renderizarQuadrado(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Tabuleiro, \"f0VhX0dgZkltTalEqrjQKoyQWKY=\");\n_c = Tabuleiro;\nfunction calcularVencedor(quadrados) {\n  const linhas = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < linhas.length; i++) {\n    const [a, b, c] = linhas[i];\n    if (quadrados[a] && quadrados[a] === quadrados[b] && quadrados[a] === quadrados[c]) {\n      return {\n        vencedor: quadrados[a],\n        posicoes: [a, b, c]\n      };\n    }\n  }\n  return null;\n}\nexport default Tabuleiro;\nvar _c;\n$RefreshReg$(_c, \"Tabuleiro\");","map":{"version":3,"names":["React","useState","Quadrado","jsxDEV","_jsxDEV","Tabuleiro","_s","quadrados","setQuadrados","Array","fill","xIsNext","setXIsNext","posicoesVencedoras","setPosicoesVencedoras","useEffect","resultado","calcularVencedor","setLinhaVencedora","linhaVencedora","includes","setTimeout","reiniciarJogo","handleClick","index","novosQuadrados","slice","posicoes","renderizarQuadrado","isVencedor","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","status","vencedor","children","style","display","_c","linhas","i","length","a","b","c","$RefreshReg$"],"sources":["/home/mano/Desktop/jogos/xbola/src/Tabuleiro.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Quadrado from \"./Quadrado\";\n\nfunction Tabuleiro() {\n  const [quadrados, setQuadrados] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [posicoesVencedoras, setPosicoesVencedoras] = useState([]);\n\n   // Calcula o vencedor ou verifica empate após cada jogada\n  useEffect(() => {\n    const resultado = calcularVencedor(quadrados);\n    if (resultado) {\n      setLinhaVencedora(resultado.linhaVencedora);\n    } else if (!quadrados.includes(null)) {\n      setTimeout(reiniciarJogo, 2000); // Empate: Reinicia automaticamente\n    }\n  }, [quadrados]);\n\n  function handleClick(index) {\n    if (quadrados[index] || calcularVencedor(quadrados)) return;\n\n    const novosQuadrados = quadrados.slice();\n    novosQuadrados[index] = xIsNext ? \"X\" : \"O\";\n    setQuadrados(novosQuadrados);\n    setXIsNext(!xIsNext);\n\n    const resultado = calcularVencedor(novosQuadrados);\n    if (resultado) {\n      setPosicoesVencedoras(resultado.posicoes);\n    }\n  }\n\n  function renderizarQuadrado(index) {\n    const isVencedor = posicoesVencedoras.includes(index); // Verifica se o índice é uma posição vencedora\n    return (\n      <Quadrado\n        value={quadrados[index]}\n        onClick={() => handleClick(index)}\n        isVencedor={isVencedor}\n      />\n    );\n  }\n\n  const resultado = calcularVencedor(quadrados);\n  const status = resultado\n    ? `Vencedor: ${resultado.vencedor}`\n    : `Jogador: ${xIsNext ? \"X\" : \"O\"}`;\n\n  return (\n    <div>\n      <div>{status}</div>\n      <div style={{ display: \"flex\" }}>\n        {renderizarQuadrado(0)}\n        {renderizarQuadrado(1)}\n        {renderizarQuadrado(2)}\n      </div>\n      <div style={{ display: \"flex\" }}>\n        {renderizarQuadrado(3)}\n        {renderizarQuadrado(4)}\n        {renderizarQuadrado(5)}\n      </div>\n      <div style={{ display: \"flex\" }}>\n        {renderizarQuadrado(6)}\n        {renderizarQuadrado(7)}\n        {renderizarQuadrado(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction calcularVencedor(quadrados) {\n  const linhas = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < linhas.length; i++) {\n    const [a, b, c] = linhas[i];\n    if (quadrados[a] && quadrados[a] === quadrados[b] && quadrados[a] === quadrados[c]) {\n      return { vencedor: quadrados[a], posicoes: [a, b, c] };\n    }\n  }\n  return null;\n}\n\n\nexport default Tabuleiro;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}